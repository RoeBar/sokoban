
#  Speech to Spell Recognition App

A simple app that listens to the user's voice, transcribes it, and uses Google Gemini to detect whether a known spell name (e.g., `fireball`, `rage`) is mentioned.

------------------------------------------------------------------------------------------------------------------------------------------------
##  Dependencies

Before running the project, install the following:
1.downlord live server in vs code
2.downlod node js // need at least v18 so gemini api can work
3.make sure .env not text file.
4.in cmd do "cd *folder*".
then:
5. npm init -y
6. npm install express cors dotenv @google/generative-ai
7. npm install -D nodemon live-server

------------------------------------------------------------------------------------------------------------------------------------------------
### File Overview
File                            Description
1. speech-client.html           Frontend HTML file. Records user speech and sends it to the backend.

2. spell-api-server.mjs	        Node.js Express server. Receives text and returns Gemini's spell detection.

3. gemini-spell-checker.mjs     Wraps the Gemini API and provides a function to analyze user text.

4. .env	                        Stores your Gemini API key (GEMINI_API_KEY=...). PLASE DO NOT SHARE PUBLICLY! 

------------------------------------------------------------------------------------------------------------------------------------------------
#### How to Run
1. Set up your .env file:
    in the .env update: GEMINI_API_KEY=your_api_key_here 
    IN GIT ITS MY PRIVATE API KEY THAT IS LINKED TO MY ACCOUNT, SO DON'T SHARE IT,BUT YOU CAN USE IT FOR THE PROJECT.
2. Start the server:
    In CMD, navigate to the files directory and start the server with:    
    "node spell-api-server.mjs"
    You should see:
    "Server running at http://localhost:3000"
3. Open the frontend:
    Open speech-client.html directly in your browser (or serve it via Live Server or a simple HTTP server).
    i personally used "Live Server".
4. Use the app:
    Click the "Start Listening" button and say something like:
    then if you have a mic you can say "fireball"
    The app will show the spell Gemini recognized.
    if invalid input will return json { "spell": null }
